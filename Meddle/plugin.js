(function(m,a,E,v,c,n,y,J,x){"use strict";function S(e){return e&&typeof e=="object"&&"default"in e?e:{default:e}}function L(e){if(e&&e.__esModule)return e;var s=Object.create(null);return e&&Object.keys(e).forEach(function(r){if(r!=="default"){var d=Object.getOwnPropertyDescriptor(e,r);Object.defineProperty(s,r,d.get?d:{enumerable:!0,get:function(){return e[r]}})}}),s.default=e,Object.freeze(s)}var t=L(E),l=S(x);const[w,k,{GuildFeatures:H},N,u,g,q,i,{joinGuild:F}]=c.batchFind(({findByProps:e,findByDisplayName:s})=>{s("SettingsView"),e("dirtyDispatch"),e("GuildFeatures"),s("FormTitle"),s("FormText"),s("FormDivider"),s("Switch"),e("Sizes","Colors","Looks","DropdownSizes"),e("joinGuild")});function I(e){return t.createElement("div",{className:"beef-meddle-settings-title"},t.createElement(N,{tag:"h1"},"Meddle"),t.createElement(u,null,"A tool for those who like to mess with the Maze."),t.createElement(u,{className:"beef-meddle-settings-title-subtext"},"Currently very WIP"))}function M({items:e}){let[s,r]=t.useState(0);return t.createElement("div",null,t.createElement("div",{className:"beef-meddle-settings-section"},t.createElement(I,null),t.createElement(g,{className:"beef-meddle-settings-divider"}),t.createElement("div",{className:"beef-meddle-tabbar"},e.map((d,o)=>t.createElement("button",{className:"beef-meddle-button"+(o===s?" beef-meddle-selected":""),onClick:()=>r(o)},t.createElement(u,null,d.text))))),t.createElement(g,{className:"beef-meddle-settings-divider"}),t.createElement("div",{className:"beef-meddle-settings-section beef-meddle-tabbar-content"},t.createElement(e[s].component,{goTo:r})))}const h=c.findByDisplayName("FormText"),D=c.findByDisplayName("Switch"),T=c.findByDisplayName("TextInput");c.findByDisplayName("Select",!1).SingleSelect;const p=e=>({display:"flex",alignItems:"center",gap:".5rem",marginBottom:"1rem",marginLeft:e!==void 0?"1rem":0}),f=({k:e,depends:s,children:r})=>l.default.createElement("div",{style:p(s)},l.default.createElement(D,{checked:n.persist.ghost[e],disabled:s!==void 0&&!n.persist.ghost[s],onChange:d=>n.persist.store[e]=d}),l.default.createElement(h,{children:r})),j=({k:e,depends:s,children:r})=>l.default.createElement("div",{style:p(s)},l.default.createElement(T,{value:n.persist.ghost[e],disabled:s!==void 0&&!n.persist.ghost[s],onChange:d=>n.persist.store[e]=d}),l.default.createElement(h,{children:r})),z=e=>s=>(y.useNest(n.persist),e(s)),B=(e,s=n.persist)=>{for(const r in e)s.ghost[r]===void 0&&(s.store[r]=e[r])};function b({k:e,depends:s,children:r}){return t.createElement("div",{class:"beef-meddle-textbox-wrapper"},t.createElement(j,{k:e,depends:s},r))}function C(e){return t.createElement("div",{className:"beef-meddle-settings-tab"},t.createElement(f,{k:"dispatchLogEnabled"},"Log all FluxDispatcher calls to console"),t.createElement(f,{k:"dispatchWhiteListMode"},"Dispatch logger whitelist mode"),t.createElement(b,{k:"dispatchIgnoreList"},"FluxDispatcher calls to hide when not in whitelist mode (comma separated)"),t.createElement(b,{k:"dispatchWhiteList"},"FluxDispatcher calls to allow when in whitelist mode (comma separated)"))}function P({text:e,color:s,size:r,look:d,func:o}){return t.createElement(i,{color:i.Colors[s]||i.Colors.BRAND,size:i.Sizes[r]||i.Sizes.SMALL,look:i.Looks[d]||i.Looks.FILLED,className:"beef-ms-settings-card-button",onClick:o},e)}function R(e){return t.createElement("div",{className:"beef-meddle-settings-tab"},t.createElement(b,{k:"serverId"},"Server ID"),t.createElement(f,{k:"serverLurkMode"},"Join as lurker"),t.createElement(P,{text:"Join",size:"MEDIUM",func:async()=>{F(n.persist.ghost.serverId,{lurker:n.persist.ghost.serverLurkMode})}}))}function $(e){return t.createElement(v.ErrorBoundary,null,t.createElement("div",{className:"beef-meddle-settings"},t.createElement(M,{items:[{text:"FluxDispatcher",component:C},{text:"Servers",component:R}]})))}var O=()=>a.findAndPatch(()=>w,e=>a.after("getPredicateSections",e.prototype,(s,r)=>{if(r[1]?.section!="My Account")return;let d=r.findIndex(V=>V.section=="changelog")-1;const o=[{section:"DIVIDER"},{section:"HEADER",label:"Meddle"},{section:"beef_meddle_SETTINGS",label:"Settings",element:z($)}];return r.splice(d,0,...o),r})),W=()=>a.after("dispatch",k,e=>{!n.persist.ghost.dispatchLogEnabled||n.persist.ghost.dispatchWhiteListMode&&!n.persist.ghost.dispatchWhiteList.split(",").includes(e[0].type)||n.persist.ghost.dispatchIgnoreList.split(",").includes(e[0].type)||console.log(e[0])}),A=()=>a.injectCSS(".beef-meddle-settings .beef-meddle-settings-title h1{margin-bottom:.2rem}.beef-meddle-settings .beef-meddle-settings-title :nth-child(3){color:var(--text-muted)}.beef-meddle-settings .beef-meddle-settings-title .beef-meddle-settings-title-subtext{font-size:x-small}.beef-meddle-settings .beef-meddle-settings-section{padding:1rem;border-radius:.5rem;background-color:var(--background-secondary)}.beef-meddle-settings .beef-meddle-settings-tab{padding:.25rem}.beef-meddle-settings .beef-meddle-settings-divider{margin-top:.5rem;margin-bottom:.5rem}.beef-meddle-row{display:flex;gap:1rem}.beef-meddle-row :not(:last-child){flex:1}.beef-meddle-textbox-wrapper *{display:flex;flex-direction:column-reverse}.beef-meddle-textbox-wrapper * *{width:100%}.beef-meddle-tabbar{padding:.25rem;display:grid;grid-auto-flow:column;grid-auto-columns:7rem}.beef-meddle-tabbar .beef-meddle-button *{cursor:pointer}.beef-meddle-tabbar *{margin-right:1rem;padding:.2rem;border-radius:.3rem;min-width:5rem;text-align:center;background:none}.beef-meddle-tabbar .beef-meddle-selected{width:fit-content}.theme-dark .beef-meddle-tabbar .beef-meddle-selected{background:rgba(255,255,255,.2666666667)}.theme-light .beef-meddle-tabbar .beef-meddle-selected{background:rgba(0,0,0,.2)}.beef-meddle-tabbar :last-child{margin-right:0}");B({dispatchLogEnabled:!1,dispatchIgnoreList:"",dispatchWhiteList:"",dispatchWhiteListMode:!1,serverId:"",serverLurkMode:!1});const G=[O(),W(),A()];function U(){_.forEachRight(G,e=>e())}return m.onUnload=U,Object.defineProperty(m,"__esModule",{value:!0}),m})({},cumcord.patcher,cumcord.modules.common.React,cumcord.ui.components,cumcord.modules.webpack,cumcord.pluginData,cumcord.utils,cumcord.plugins,cumcord.modules.common.React);
