(function(n,s,t){"use strict";function u(c){const e=document.createElement("style");return e.className="CUMCORD_INJECTED_CSS CUMCORD_QUICK_CSS",e.textContent=c,document.head.appendChild(e),()=>{e.remove()}}function r(){for(const c of document.querySelectorAll(".CUMCORD_QUICK_CSS"))c.remove()}const d=s.webpackModules.findByDisplayName("TextArea");class m extends t.React.Component{constructor(e){super(e);this.state={updatable:!1,name:e.name,value:e.value}}setCSS(e){this.setState({value:e})}render(){return t.React.createElement(d,{rows:20,value:this.state.value,onChange:e=>{r(),u(e),this.setCSS(e)}})}}const S=s.webpackModules.findByDisplayName("FormTitle"),p=s.webpackModules.findByDisplayName("FormDivider"),C=s.webpackModules.findByDisplayName("HelpMessage");let g;var k=c=>(console.log(g),t.React.createElement("div",{className:"cumcord-quickcss"},t.React.createElement(S,{className:"cumcord-quickcss-formtitle",tag:"h1"},"Quick CSS"),t.React.createElement(C,{className:"cumcord-quickcss-helpmessage",messageType:0},"This does not save! Yes, I know, the storage API is available now, but I'm lazy!"),t.React.createElement(p,{className:"cumcord-quickcss-formdivider"}),t.React.createElement(m,{className:"cumcord-quickcss-input"})));let i,l=[];var h=()=>({onLoad(){const c=s.webpackModules.findByDisplayName("SettingsView");i=n.patcher.after("getPredicateSections",c.prototype,(e,a)=>{const o=a.findIndex(y=>y.section=="changelog")-1;if(o<0)return a;const f=[{section:"CUMCORD_QUICKCSS",label:"Quick CSS",element:k}];return a.splice(o,0,...f),a}),l.push(n.patcher.injectCSS(`
                .cumcord-quickcss-formdivider, .cumcord-quickcss-helpmessage {
                    margin-bottom: 20px;
                    margin-top: 20px;
                }
            `))},onUnload(){i(),l(),r()}});return h})(cumcord,cumcord.modules,cumcord.modules.common);
